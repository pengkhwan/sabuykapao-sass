---
// src/pages/[slug].astro
import Layout from '../layouts/Layout.astro';
import '../styles/pages/_slug.scss';
import { client } from '../lib/sanityClient.js';
import { PortableText } from 'astro-portabletext';
import SanityImage from '../components/SanityImage.astro';

// Import Components ที่อาจจะได้ใช้ทั้งหมด
import ProductGallery from '../components/ProductGallery.svelte';
import PurchaseBox from '../components/PurchaseBox.astro';
import ProductSchema from '../components/ProductSchema.astro';

// 1. getStaticPaths: ดึง slug ทั้งหมดที่จำเป็น
export async function getStaticPaths() {
  const query = `*[_type in ["product", "article", "portfolio"] && defined(slug.current)][].slug.current`;
  const slugs = await client.fetch(query);
  return slugs.map((slug) => ({
    params: { slug: slug },
  }));
}

const { slug } = Astro.params;

// 2. Query ใหม่: ดึงข้อมูลโดยไม่สน _type แต่ขอ _type และข้อมูลที่จำเป็นทั้งหมดติดมาด้วย
const query = `*[_type in ["product", "article", "portfolio"] && slug.current == $slug][0]{
  ...,
  "mainImageUrl": image.asset->url,
  "gallery": gallery[]{ _key, "url": asset->url, alt },
  "categories": categories[]->{ title, "slug": slug.current },
  "ogImageUrl": seo.ogImage.asset->url,
  featuredImage {
    alt,
    asset-> {
      ...,
      metadata {
        dimensions
      }
    }
  }
}`;
const data = await client.fetch(query, { slug });

if (!data) return Astro.redirect('/404');

// แก้ไขชื่อฟิลด์ตาม Schema ล่าสุด
const pageTitle = data.seo?.title || data.title;
const pageDescription = data.seo?.description || data.excerpt || data.shortDescription || '';

// สร้าง object ของ components สำหรับ PortableText
const components = {
  type: {
    image: SanityImage, // บอกให้ PortableText ใช้ SanityImage.astro เมื่อเจอรูปภาพ (type="body" เป็น default)
  },
};
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  ogImage={data.ogImageUrl || data.mainImageUrl}
>
  {/* ============== ส่วนแสดงผลสำหรับ PRODUCT ============== */}
  {data._type === 'product' && (
    <Fragment>
      <ProductSchema product={data} />
      <main class="slug-page">
        <div class="container">
          <nav class="breadcrumbs">
            <a href="/">หน้าแรก</a>
            <span>/</span>
            {data.categories?.[0] &&
              <a href={`/shop/${data.categories[0].slug}`}>{data.categories[0].title}</a>
            }
          </nav>
          <div class="product-layout-grid">
            <div class="product-col-gallery">
              <ProductGallery client:load mainImage={{ url: data.mainImageUrl, alt: data.image?.alt || data.title }} galleryImages={data.gallery} />
            </div>
            <div class="product-col-info">
              <h1>{data.title}</h1>
              <div class="category-tags">
                <span class="label">หมวดหมู่:</span>
                {data.categories?.map(cat => <a href={`/shop/${cat.slug}`}>{cat.title}</a>)}
              </div>
              <p class="short-description">{data.shortDescription}</p>
              {data.features &&
                <ul class="features-list">
                  {data.features.map(feature => (
                    <li>
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="icon"><path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0 -16 8 8 0 0 0 0 16Zm3.857-9.809a.75.75 0 0 0-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 1 0-1.06 1.061l2.5 2.5a.75.75 0 0 0 1.137-.089l4-5.5Z" clip-rule="evenodd" /></svg>
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
              }
            </div>
            <div class="product-col-purchase">
              <PurchaseBox product={data} />
            </div>
          </div>
          <div class="description-section">
            <h2>รายละเอียดสินค้า</h2>
            {data.description && <div class="prose"><PortableText value={data.description} components={components} /></div>}
            {/* ... ส่วนที่เหลือของ Product ... */}
          </div>
        </div>
      </main>
    </Fragment>
  )}

  {/* ============== ส่วนแสดงผลสำหรับ ARTICLE (แก้ไขล่าสุด) ============== */}
  {data._type === 'article' && (
    <main class="container article-page">
      <div class="article-header">
        <h1>{data.title}</h1>

        {/* --- แสดงผล Featured Image พร้อมระบุ type="featured" --- */}
        {data.featuredImage && (
          <div class="featured-image">
            <SanityImage node={data.featuredImage} type="featured" />
          </div>
        )}
      </div>
      
      <div class="prose">
        <PortableText value={data.body} components={components} />
      </div>
    </main>
  )}

  {/* ============== ส่วนแสดงผลสำหรับ PORTFOLIO ============== */}
  {data._type === 'portfolio' && (
    <main class="container">
      <h1>{data.title}</h1>
      <p>นี่คือหน้า Portfolio</p>
       {data.body && <div class="prose"><PortableText value={data.body} components={components} /></div>}
    </main>
  )}
</Layout>